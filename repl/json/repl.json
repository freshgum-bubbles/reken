[
    {
        "title": "data-text - Hello World",
        "description": "Show the use of data-text attribute to display dynamic content in an element",
        "code": [
            "<script>",
            " let name = 'World'",
            "</script>",
            "<div data-text=\"Hello ${name}\">"
            ]
    },
    {
        "title": "data-html - Hello World Again",
        "description": "Show the use of data-html attribute to display dynamic html in an element",
        "code": [
            "<script>",
            " let name = 'World'",
            "</script>",
            "<div data-html=\"<div>Hello <strong>${name}</strong></div>\">"
            ]
    },
    {
        "title": "data-value - Hello Name",
        "description": "Show the use of data-value attribute to change a javascript value with a text input control.",
        "code": [
            "<script>",
              "let name = 'World'", 
            "</script>",
            "<label>Name: <input data-value=\"name\"></label>",
            "<div data-text=\"Hello ${name}\">"
            ]
    },
    {
        "title": "data-action - Increase counter",
        "description": "Show the use of data-action attribute to increment a javascript counter.",
        "code": [
            "<script>",
              "let counter = 0", 
            "</script>",
            "<button data-action=\"counter++\">Increment Counter</button>",
            "<div data-text=\"Counter: ${counter}\">"
            ]
    },
    {
        "title": "data-if - Conditional display of HTML",
        "description": "Show the use of data-if to conditional show an HTML element.",
        "code": [
            "<script>",
              "let checked = false", 
            "</script>",
            "<label>Select: <input data-value=\"checked\" type=\"checkbox\"></label>",
            "<div data-if=\"checked\"  data-text=\"Show when checked.  Checked = ${checked}\"></div>",
            "<div data-if=\"!checked\" data-text=\"Show when not checked. Checked = ${checked}\"></div>"
            ]
    },
    {
        "title": "data-style - Dynamically update styles",
        "description": "Show the use of data-style attribute to dynamically change the color of an element.",
        "code": [
            "<style>",
            "label {display:block;}",
            "</style>",
            "<script>",
              "let red = 0", 
              "let green = 0", 
              "let blue = 0", 
            "</script>",
            "<label>Red: <input data-value=\"red\" type=\"range\" min=\"0\", max=\"255\"></label>",
            "<label>Green: <input data-value=\"green\" type=\"range\" min=\"0\", max=\"255\"></label>",
            "<label>Blue: <input data-value=\"blue\" type=\"range\" min=\"0\", max=\"255\"></label>",
            "<div data-text=\"${red},${green},${blue}\"></div>",
            "<div data-style=\"background:rgb(${red},${green},${blue});width:100px;height:100px;\"></div>"
            ]
    },
    {
        "title": "data-class - Dynamically toggle classes",
        "description": "Show the use of data-class to conditional show an HTML element.",
        "code": [
            "<style>",
            ".BOLD {font-weight:bold}",
            ".italics {font-style: italic}",
            "</style>",
            "<script>",
              "let bold = false",
              "let italics = false",
            "</script>",
            "<label>Bold: <input data-value=\"bold\" type=\"checkbox\"></label>",
            "<div data-class=\"BOLD:bold\" data-text=\"This is text is ${bold?'Bold':'Normal'}\"></div>",
            "<label>Italics: <input data-value=\"italics\" type=\"checkbox\"></label>",
            "<div data-class=\"italics\" data-text=\"This is text is ${italics?'Italics':'Normal'}\"></div>"
            ]
    },
    {
        "title": "data-attr - Dynamically update element attributes",
        "description": "Show the use of data-attr-* attribute to dynamically change the attributes x,y,width,height and fill coloror of an SVG element.",
        "code": [
            "<style>",
            "label {display:block;}",
            "</style>",
            "<script>",
              "let width = 90", 
              "let height = 90", 
            "</script>",
            "<label>Width: <input data-value=\"width\" type=\"range\" min=\"0\", max=\"100\"></label>",
            "<label>Height: <input data-value=\"height\" type=\"range\" min=\"0\", max=\"100\"></label>",
            "<svg width=\"100\" height=\"100\">",
                "<rect",
                    "data-attr-x=\"${50-width/2}\" data-attr-width=\"${width}\"",
                    "data-attr-y=\"${50-height/2}\" data-attr-height=\"${height}\"",
                    "data-attr-fill=\"${ '#' + Math.floor(Math.random() * 16777215).toString(16)}\">",
                "</rect>",
            "</svg>"
            ]
    },
    {
        "title": "data-for - Repeat N times",
        "description": "Show the use of data-for to repeat an li 10 times and use the local index var, which we called repeatVar.",
        "code": [
            "<ol data-for=\"repeatVar:10\">List 10 items",
            "  <li data-text=\"repeatVar.index = ${repeatVar.index}\"></li>",
            "</ol>"
            ]
    },
    {
        "title": "data-for - List values of a string",
        "description": "Show the use of data-for to loop over the chars of astring and use the local index and item attribute on the var",
        "code": [
            "<script>",
            "  let myString = 'Loop over this.'", 
            "</script>",
            "<ul data-for=\"repeatVar:myString\">List the string chars",
            "  <li data-text=\"${repeatVar.index} - ${repeatVar.item}\"></li>",
            "</ul>"
            ]
   },
   {
    "title": "data-for - List values of an array",
    "description": "Show the use of data-for to loop over the elements of an array and use the local index and item attribute on the var",
    "code": [
        "<script>",
        "  let myArray = ['One', 'Two', 'Three']", 
        "</script>",
        "<ul data-for=\"repeatVar:myArray\">List the Array elements",
        "  <li data-text=\"${repeatVar.index} - ${repeatVar.item}\"></li>",
        "</ul>"
        ]
    },
    {
        "title": "data-for - List properties from an array of objects",
        "description": "Show the use of data-for to loop over the elements of an array with objects and use the item attribute to access the object properties",
        "code": [
            "<script>",
            "  let myNames = [{'first':'John','last':'Adams'},{first:'George',last:'Washington'}]", 
            "</script>",
            "<table>",
            "<tr><th>First name</th><th>Last name</th><th>Full name</th></tr>",
            "<tbody data-for=\"nameVar:myNames\">",
            "  <tr>",
            "    <td data-text=\"${nameVar.item.first}\"></td>",
            "    <td data-text=\"${nameVar.item.last}\"></td>",
            "    <td data-text=\"${nameVar.item.first} ${nameVar.item.last}\"></td>",
            "  </tr>",
            "</tbody>",
            "</table>"
        ]
    },
    {
        "title": "data-calc - Calculate javascript fragment",
        "description": "Show the use of data-calc can ensure a piece of javascript reruns, everytime there is a model update.",
        "code": [
            "<style>",
            "label {display:block;}",
            "</style>",
            "<script>",
            "  let varA = 3", 
            "  let varB = 4", 
            "</script>",
            "<script data-calc>",
            "  let pythagoras = Math.sqrt(Math.pow(varA,2) + Math.pow(varB,2))", 
            "</script>",
            "<label><span data-text=\"A: ${varA}\"></span><input type=\"range\" data-value=\"varA\" min=\"0\" max=\"10\"></label>",
            "<label><span data-text=\"B: ${varB}\"></span><input type=\"range\" data-value=\"varB\" min=\"0\" max=\"10\"></label>",
            "<div data-text=\"C: ${pythagoras.toFixed(1)}\"></div>"

            ]
    },
    {
     "title": "data-rest - Fetch an object from a Rest service",
     "description": "Fetch an Object from a JSON service and assign to a javascript variable",
     "code": [
         "<script>",
         "  let myObject = {'propA': '', 'propB':''}", 
         "</script>",
         "<div data-rest=\"myObject:json/object.json\" data-text=\"${myObject.propA} - ${myObject.propB}\">"
         ]
     },
     {
        "title": "data-rest - Fetch an array and display in a table.",
        "description": "Fetch an array with object from a JSON service, assign to a javascript and then display in a table",
        "code": [
            "<script>",
            "  let myArray = []", 
            "</script>",
            "<table>",
            "<tbody data-rest=\"myArray:arrayProperty:json/array.json\" data-for=\"arrayElem:myArray\">",
            "  <tr>",
            "    <td data-text=\"${arrayElem.item.first}\">",
            "    </td>",
            "    <td data-text=\"${arrayElem.item.last}\">",
            "    </td>",
            "  </tr>",
            "</body>",
            "</table>"
        ]
    },
    {
        "title": "data-component - Create and use a component",
        "description": "Create and style a component that renders a div with a background color specified in the color argument and display it three times",
        "code": [
            "<div data-component=\"colorbox\" data-arg-color=\"red\"></div>",
            "<div data-component=\"colorbox\" data-arg-color=\"white\"></div>",
            "<div data-component=\"colorbox\" data-arg-color=\"blue\"></div>",
            "<template data-component=\"colorbox\" data-arg-color>",
            "  <style>",
            "    :host {",
            "      width:100%;",
            "      height:100px;",
            "    }",
            "  </style>",
            "  <div data-style=\"background:${color}\"></div>",
            "</template>"
        ]
    }
]